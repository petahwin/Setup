# No cycling between items upon repeated tab presses
setopt noautomenu

autoload -Uz colors && colors
autoload -Uz compinit && compinit
autoload edit-command-line; zle -N edit-command-line

RPROMPT="%2~"

# For vi mode specification
bindkey -v
bindkey -M vicmd v edit-command-line

# Enable reverse search
export HISTFILE=~/.zsh_history
export HISTSIZE=1000000
export SAVEHIST=1000000
setopt EXTENDED_HISTORY
setopt INC_APPEND_HISTORY
bindkey '^R' history-incremental-search-backward # Seems to only work after vi mode settings


export KEYTIMEOUT=3  # lowers the lag time to switch to normal mode
COLORS=(red blue green cyan yellow magenta)
PROMPT_COLOR=$COLORS[$(( ${RANDOM} % 6 + 1))]
function zle-line-init zle-keymap-select {
    VIM_NORMAL_PROMPT="%{$fg_bold[yellow]%}[% N]% %{$reset_color%}:"
    VIM_INS_PROMPT="%{$fg_bold[green]%}[% I]% %{$reset_color%}:"
    PROMPT="%F{$PROMPT_COLOR}${SSH_CLIENT:+(%m)}%F{reset}${${KEYMAP/vicmd/$VIM_NORMAL_PROMPT}/(main|viins)/$VIM_INS_PROMPT}%D{%H%M%S}$ "
    zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select

# Alias
alias ..="cd .."
alias ls="ls --color"

# Welcome screen
if [[ $- == *i* ]]; then
  WELCOME_MESSAGE=$(cat <<HERE
__          __ ______  _       _____  ____   __  __  ______ 
\ \        / /|  ____|| |     / ____|/ __ \ |  \/  ||  ____|
 \ \  /\  / / | |__   | |    | |    | |  | || \  / || |__   
  \ \/  \/ /  |  __|  | |    | |    | |  | || |\/| ||  __|  
   \  /\  /   | |____ | |____| |____| |__| || |  | || |____ 
    \/  \/    |______||______|\_____|\____/ |_|  |_||______|
                                                            
                                                            
           _____   ______  _______  ______  _____           
          |  __ \ |  ____||__   __||  ____||  __ \          
          | |__) || |__      | |   | |__   | |__) |         
          |  ___/ |  __|     | |   |  __|  |  _  /          
          | |     | |____    | |   | |____ | | \ \          
          |_|     |______|   |_|   |______||_|  \_\         
HERE
)
  if [[ -e /usr/games/cowthink ]]; then
    MESSAGE_HEIGHT=$(echo "$WELCOME_MESSAGE" | wc -l)
    TERMINAL_HEIGHT=$(tput lines)

    CANDIDATE_COWS=$(wc -l /usr/share/cowsay/cows/* | head -n-1  | \
        awk -vMSG_H=${MESSAGE_HEIGHT} -vTERM_H=${TERMINAL_HEIGHT} \
            '{if (($1 + MSG_H) <= TERM_H) { print $2 }}')

    if [[ -n "$CANDIDATE_COWS" ]]; then
      CHOSEN_COW=$(echo "$CANDIDATE_COWS" | shuf -n1)
      WELCOME_MESSAGE=$( echo "$WELCOME_MESSAGE" | /usr/games/cowsay -n -f ${CHOSEN_COW} )
    else
      WELCOME_MESSAGE=$( echo "$WELCOME_MESSAGE" | /usr/games/cowsay -n )
    fi
  fi

  if [[ -e /usr/games/lolcat ]]; then
    echo "$WELCOME_MESSAGE" | /usr/games/lolcat
  else
    echo "$WELCOME_MESSAGE"
  fi
fi
